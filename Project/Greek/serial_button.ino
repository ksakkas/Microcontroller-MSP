/*
Αυτός ο κωδικός σχεδιάστηκε από τον Κωνσταντίνο Σάκκα στις 7 Αυγούστου 2020.
Προορίζεται για ακαδημαϊκή χρήση στο Τμήμα Πληροφορικής και Τηλεπικοινωνιών του Πανεπιστημίου
Ιωαννίνων και του github https://ksakkas.github.io/Microcontroller-MSP430/.
*/
/*
Αυτός ο κωδικός σχεδιάστηκε και εκτελέστηκε στο Energia ver. 1.8.11E23
Σχεδιάστηκε για χρήση με TI MSP430F5529
*/

/*
Ο χρήστης μέσω μηνυμάτων θα μπορεί να ελέγχει την κατάσταση και των δύο ενσωματωμένων led της πλακέτας

Κάθε led θα ελέγχεται με διαφορετικό μήνυμα-εντολή
1-2 Κόκκινο Led
3-4 Πράσινο Led
5-6 Και τα δύο
(Οι μονοί αριθμοί αφορούν το άναμμα και οι ζυγοί το σβήσιμο των Led)

Το κόκκινο Led θα αναβοσβήνει με συχνότητα 1Hz ενώ το πράσινο με συχνότητα 2Hz. 
(Για όσους δεν έχουν φυσική πλακέτα, θεωρείστε ως πράσινο Led το δεξιά)

Χρήση διαφορετικού μετρητή για κάθε Led

Το σύστημα θα ενημερώνει το χρήστη για την κατάσταση του συστήματος όταν αυτός πιέζει το button
*/

const int button = PUSH2;  //Αρχικοποιούμε στην σταθερά button το κουμπί PUSH2 (P1.1)

int buttonCurrent=HIGH; //Αρχικοποιούμε την μεταβλητή buttonCurrent = HIGH δηλαδή λογικό 1
                       //Η συγκεκριμένη μεταβλητή θα κρατάει την κατάσταση του κουμπιού
                       
void setup() {  //Συνάρτηση αρχικοποίησης παραμέτρων και υλικών συστήματος
  Serial.begin(9600); //Είναι ο ρυθμός μετάδοσης σε bits / sec 
  pinMode(RED_LED, OUTPUT); //Δήλωση σταθεράς led = RED_LED ως έξοδο
  pinMode (GREEN_LED, OUTPUT);//Δήλωση σταθεράς led = RED_LED ως έξοδο
  pinMode(button, INPUT_PULLUP);                                  //Δήλωση σταθεράς button = PUSH2 ως έξοδο
  Serial.println("Τμήμα Πληροφορικής & Τηλεπικοινωνιών ");//Εμφάνιση μηνύματος στην έναρξη του προγράμματος
  Serial.println("Εργαστήριο Συστήματα Μικροεπεξεργαστών");//Εμφάνιση μηνύματος στην έναρξη του προγράμματος
  Serial.println("");//Εμφάνιση μηνύματος στην έναρξη του προγράμματος
  Serial.println("Κόκκινο LED;");//Εμφάνιση μηνύματος στην έναρξη του προγράμματος
  Serial.println("Ανάβει με 1 και σβήνει με 2");//Εμφάνιση μηνύματος στην έναρξη του προγράμματος
  Serial.println("Πράσινο LED;");//Εμφάνιση μηνύματος στην έναρξη του προγράμματος
  Serial.println("Ανάβει με 3 και σβήνει με 4");//Εμφάνιση μηνύματος στην έναρξη του προγράμματος
  Serial.println("Κόκκινο & Πράσινο");//Εμφάνιση μηνύματος στην έναρξη του προγράμματος
  Serial.println("Ανάβουν με 5 και σβήνουν με 6");//Εμφάνιση μηνύματος στην έναρξη του προγράμματος
  while (!Serial.available())//Όσο η σειριακή είσοδος δεν είναι διαθέσιμη *δεν θα κάνει τίποτα 
  { }; //*δεν θα κάνει τίποτα 
}
    int r=0;//Αρχικοποιούμε την μεταβλητή x = 0 για μετρητή του red led
    int g=0;//Αρχικοποιούμε την μεταβλητή x = 0 για μετρητή του green led
    
void loop() { //Κύρια επαναληπτική συνάρτηση
  if(Serial.available())  //Αν η σειριακή είσοδος είναι διαθέσιμη
  {

    int x = Serial.parseInt(); //Στην μεταβλητή x εκχωρούμε την τιμή που έδωσε ο χρήστης στην σειριακή μετατρέποντας το σε ακέραιο 

    if(x==1)//Αν το x έχει την τιμή του ίση με 1
    {
      while(x=1) { //Όσο το x = 1 => δημιουργία επαναληπτικού ατέρμον βρόγχου 
      digitalWrite(RED_LED, HIGH);  //Δίνει λογική τιμή 1 (HIGH) στο red led δηλαδή το ανάβει
      delay(500);              //Σταματά την εκτέλεση για 500 ms = 0.5 sec
      digitalWrite(RED_LED, LOW); //Δίνει λογική τιμή 0 (LOW) στο led δηλαδή το σβήνει
      delay(500); //Σταματά την εκτέλεση για 500 ms = 0.5 sec
      r++; //Αυξάνει το μετρητή κατά ένα
      if(Serial.available()) //Αν η σειριακή είσοδος είναι διαθέσιμη
      { 
        x = Serial.parseInt(); //Στην μεταβλητή x εκχωρούμε την τιμή που έδωσε ο χρήστης στην σειριακή μετατρέποντας το σε ακέραιο 
        if(x==0)//Αν το x έχει την τιμή του ίση με 0
        {}//Συνεχίζει την επανάληψη 
        else if (x==2)//Αν το x έχει την τιμή του ίση με 2
        {              
          break;//Σταματάει την επανάληψη  
        }
       }
      }
    }
   
    else if (x==2)//Αν το x έχει την τιμή του ίση με 2
    {  
      digitalWrite(RED_LED, LOW);         //Δίνει λογική τιμή 0 (LOW) στο led δηλαδή το σβήνει
    }
    
    else if (x==3)//Αν το x έχει την τιμή του ίση με 3
    {
      while(x=3) {//Όσο το x = 3 => δημιουργία επαναληπτικού ατέρμον βρόγχου 
      digitalWrite(GREEN_LED, HIGH);   //Δίνει λογική τιμή 1 (HIGH) στο red led δηλαδή το ανάβει
      delay(250);              //Σταματά την εκτέλεση για 250 ms = 0.25 sec
      digitalWrite(GREEN_LED, LOW);    //Δίνει λογική τιμή 0 (LOW) στο led δηλαδή το σβήνει
      delay(250); //Σταματά την εκτέλεση για 250 ms = 0.25 sec
      g++;//Αυξάνει το μετρητή κατά ένα
      if(Serial.available())//Αν η σειριακή είσοδος είναι διαθέσιμη
      {  
        x = Serial.parseInt(); //Στην μεταβλητή x εκχωρούμε την τιμή που έδωσε ο χρήστης στην σειριακή μετατρέποντας το σε ακέραιο 
        if(x==0)//Αν το x έχει την τιμή του ίση με 0
        {}//Συνεχίζει την επανάληψη 
        else if (x==4)//Αν το x έχει την τιμή του ίση με 4
        { 
          break;//Σταματάει την επανάληψη     
        }
       }
      }
    }
    else if (x==4) //Αν το x έχει την τιμή του ίση με 4
    {
      digitalWrite(GREEN_LED, LOW);   //Δίνει λογική τιμή 0 (LOW) στο led δηλαδή το σβήνει
    }
    else if (x==5) //Αν το x έχει την τιμή του ίση με 5
    {
      while(x=5){//Όσο το x = 5 => δημιουργία επαναληπτικού ατέρμον βρόγχου 
      digitalWrite(RED_LED, HIGH);  //Δίνει λογική τιμή 1 (HIGH) στο red led δηλαδή το ανάβει
      delay(500);             //Σταματά την εκτέλεση για 500 ms = 0.5 sec
      digitalWrite(RED_LED, LOW);   //Δίνει λογική τιμή 0 (LOW) στο led δηλαδή το σβήνει
      delay(500);  //Σταματά την εκτέλεση για 500 ms = 0.5 sec
      digitalWrite(GREEN_LED, HIGH);   //Δίνει λογική τιμή 1 (HIGH) στο red led δηλαδή το ανάβει
      delay(250);            //Σταματά την εκτέλεση για 250 ms = 0.25 sec   
      digitalWrite(GREEN_LED, LOW);    //Δίνει λογική τιμή 0 (LOW) στο led δηλαδή το σβήνει
      delay(250); //Σταματά την εκτέλεση για 250 ms = 0.25 sec
      r++;//Αυξάνει το μετρητή κατά ένα
      g++;//Αυξάνει το μετρητή κατά ένα

      if(Serial.available())//Αν η σειριακή είσοδος είναι διαθέσιμη
      {  
        x = Serial.parseInt(); //Στην μεταβλητή x εκχωρούμε την τιμή που έδωσε ο χρήστης στην σειριακή μετατρέποντας το σε ακέραιο 
        if(x==0)//Αν το x έχει την τιμή του ίση με 0
        {}//Συνεχίζει την επανάληψη 
        else if (x==6)//Αν το x έχει την τιμή του ίση με 6
        {          
          break;//Σταματάει την επανάληψη 
        }
      }
      }
    }
    else if (x==6)//Αν το x έχει την τιμή του ίση με 6
    {
      digitalWrite(RED_LED, LOW);     //Δίνει λογική τιμή 0 (LOW) στο led δηλαδή το σβήνει
      digitalWrite(GREEN_LED, LOW); //Δίνει λογική τιμή 0 (LOW) στο led δηλαδή το σβήνει
     
    }
   } 
 buttonCurrent = digitalRead(button);                       //Εκχώρηση στην μεταβλητή buttonCurrent την τιμή του Button (εαν πατήθηκε ή όχι)
   if(buttonCurrent == LOW)                                //Εαν η τιμή του buttonCurrent είναι LOW = λογικό 0 τότε
    {
    Serial.print("Το κόκκινο LED άναψε: ");//Ενημέρωση σχετικά με την συνολική λειτουργία του red led
    Serial.print(r);//Εμφάνιση της μεταβλητής - του μετρητή r
    Serial.println(" φορές");//Ενημερώνει για την κατάσταση του συστήματος 
    Serial.print("Το πράσινο LED άναψε: " );//Ενημέρωση σχετικά με την συνολική λειτουργία του green led
    Serial.print(g);//Εμφάνιση της μεταβλητής - του μετρητή g
    Serial.println(" φορές");//Ενημερώνει για την κατάσταση του συστήματος 
   }
}